type Query {
	groups: [Group!]!
	ready: String!
	topics: [Topic!]!
}

type Mutation {
	createGroup(name: String!, description: String): Topic!
	createTopic(title: String!, description: String): Topic!
	signup(email: String!, password: String!, name: String!): AuthPayload
	login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
	token: String
	user: User
}

type Group {
	id: ID!
	name: String!
	description: String!
	creator: User!
	users: [User]!
	topics: [Topic]!
	createdAt: DateTime!
	updatedAt: DateTime!
}

type Topic {
	id: ID!
	title: String!
	description: String!
	author: User!
	group: Group!
	createdAt: DateTime!
	updatedAt: DateTime!
}

type User {
	id: ID!
	name: String!
	email: String!
	topics: [Topic]!
	groupsCreated: [Group]!
	groups: [Group]!
	createdAt: DateTime!
	updatedAt: DateTime!
}


